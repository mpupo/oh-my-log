# Generated by Django 3.0.8 on 2020-07-15 03:45

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='App-Name', max_length=50, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('description', models.TextField(null=True, verbose_name='Description')),
                ('version', models.CharField(max_length=8, null=True, verbose_name='Version')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=100, verbose_name='Nickname')),
                ('last_login', models.DateTimeField(auto_now_add=True, verbose_name='Last login')),
                ('active', models.BooleanField(verbose_name='Active')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Created at')),
                ('last_time_modified', models.DateTimeField(auto_now_add=True, verbose_name='Last time modified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OperationSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('version', models.CharField(max_length=8, verbose_name='Version')),
                ('installed_apps', models.ManyToManyField(to='log_api.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='Name')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('environment', models.CharField(choices=[('DEV', 'Development'), ('PROD', 'Production'), ('QA', 'Quality Assurance'), ('TEST', 'Test')], default='DEV', max_length=30, verbose_name='Enviroment')),
                ('address', models.GenericIPAddressField(null=True, protocol='IPV4', validators=[django.core.validators.validate_ipv4_address])),
                ('operation_systems', models.ManyToManyField(to='log_api.OperationSystem')),
            ],
        ),
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateref', models.DateTimeField(auto_now_add=True, verbose_name='DateRef')),
                ('success', models.BooleanField(verbose_name='Success')),
                ('application_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='application_execution', to='log_api.Application')),
                ('machine_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='machine_execution', to='log_api.Machine')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('CRITICAL', 'CRITICAL'), ('DEBUG', 'DEBUG'), ('WARNING', 'WARNING'), ('INFO', 'INFO')], default='INFO', max_length=20, verbose_name='Level')),
                ('dateref', models.DateTimeField(verbose_name='DateRef')),
                ('archived', models.BooleanField(verbose_name='Archived')),
                ('description', models.TextField(verbose_name='Description')),
                ('execution_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execution_id', to='log_api.Execution')),
            ],
        ),
    ]
